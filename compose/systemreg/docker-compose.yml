# This file can be used to start multiple containers supporting the SOLA Systematic Registration solution. Use the command
# docker-compose up -d. It will take up to 3 minutes before the SOLA Systematic Registration services can be accessed.
version: '3'

networks:
    sola_sr:

volumes:
   sola_sr_data:
      driver: local

services:
    db:
        # DB server hosting SOLA SR database. To connect to this db; hostname=database, user=postgres, passwd=sola
        image: mcdowella/sola-systemreg-db
        ports:
         - "5432:5432"
        container_name: sr-db
        environment:
          POSTGRES_PASSWORD: ${DB_PASSWORD}
          CREATE_SOLA_DB: y
          SOLA_LOAD_DATA: y
          TZ: America/Regina
          - SOLA_DB=${DB_NAME}
          - GEOSERVER_PORT=${GEOSERVER_PORT}
        networks:
           sola_sr:
               aliases:
                 - database
        volumes:
         - sola_sr_data:/var/lib/postgresql/data

    server:
        image: mcdowella/sola-systemreg-server
        container_name: sr-srv
        ports:
         - "4848:4848"
         - "8080:8080"
         - "8181:8181"
        depends_on:
         - db
        environment:
          WAIT_TIME: 180
        networks:
           sola_sr:

    geoserver:
        image: solovov/ot-geoserver
        restart: always
        container_name: sr-gis
        ports:
         - "${GEOSERVER_PORT}:8080"
        depends_on:
         - db
        environment:
         - DB_HOST=db
         - SOLA_DB=${DB_NAME}
         - TZ=America/Regina
        command: ${DB_PASSWORD}
        networks:
           sola_sr:
               aliases:
                 - gis
        volumes:
         - sola_sr_data:/var/local/geoserver
     
    reports:
        image: solovov/ot-reports
        container_name: ot-reports
        ports:
         - "${REPORTS_PORT}:8080"
        environment:
         - DB_TYPE=postgresql
         - DB_HOST=db
         - DB_PORT=5432
         - DB_USER=postgres
         - DB_PASSWORD=${DB_PASSWORD}
         - SOLA_DB_NAME=${DB_NAME}
        command: ${DB_PASSWORD}
        depends_on:
         - server
        networks:
           sola_sr:

    # Container that deploys pgAdmin4 to allow administration of the SOLA database. Accessible on localhost:80
    # with username=mosulaim@gmail.com and passwd=sola
    dbadmin:
        image: dpage/pgadmin4
        container_name: db-admin
        ports:
          - "80:80"
        environment:
           PGADMIN_DEFAULT_EMAIL: mosulaim@gmail.com
           PGADMIN_DEFAULT_PASSWORD: sola
        networks:
           sola_sr:

    sys-backups:
        image: prodrigestivill/postgres-backup-local
        container_name: sola-db-backups
        restart: always
        volumes:
         #  - $HOME/sola-docker-data/backups/pg-sys:/backups
           - /C//sola-docker-data/backups/pg-sys:/backups
        links:
           - db
        environment:
          - POSTGRES_HOST=192.168.1.71
          - POSTGRES_DB=sola
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=sola
          - POSTGRES_EXTRA_OPTS=-Z9 --schema=public --blobs
          - SCHEDULE=@daily
          - BACKUP_KEEP_DAYS=7
          - BACKUP_KEEP_WEEKS=4
          - BACKUP_KEEP_MONTHS=6
          - HEALTHCHECK_PORT=85
        networks:
           sola_sr:
